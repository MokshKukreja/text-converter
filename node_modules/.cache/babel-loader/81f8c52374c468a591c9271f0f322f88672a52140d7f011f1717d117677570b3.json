{"ast":null,"code":"var _jsxFileName = \"/Users/mokshkukreja/Desktop/development/react/text-converter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import Alerts from \"./components/Alerts\";\n// import About from \"./About\";\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [color, setColor] = useState(\"#303030\");\n  const [alert, setAlert] = useState(null);\n  function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setColor(\"white\");\n      document.body.style.backgroundColor = \"#303030\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setColor(\"#303030\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextConverter\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        alert: showAlert,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZCfc9mHXQmSb1zT6VD/OIsr066c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","color","setColor","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/mokshkukreja/Desktop/development/react/text-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import Alerts from \"./components/Alerts\";\n// import About from \"./About\";\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nfunction App() {\n\n\n  const [mode,setMode] = useState(\"light\")\n  const [color,setColor] =useState(\"#303030\")\n  const[alert,setAlert] = useState(null)\n\n   function showAlert(message,type){\n    setAlert({\n      msg: message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode =()=>{\n      if(mode===\"light\"){\n        setMode(\"dark\")\n        setColor(\"white\")\n        document.body.style.backgroundColor=\"#303030\"\n        showAlert(\"Dark mode has been enabled\",\"success\")\n      }else{\n        setMode(\"light\")\n        setColor(\"#303030\")\n        document.body.style.backgroundColor=\"white\"\n        showAlert(\"Light mode has been enabled\",\"success\")\n      }\n  }\n  return (\n   <>\n   {/* <Router> */}\n    <Navbar title=\"TextConverter\"  mode={mode} toggleMode={toggleMode} />\n    {/* <Alerts alert={alert}/> */}\n    <div className=\"container my-3\">\n    {/* <Routes> */}\n      {/* <Route exact path=\"/about\" element={ }> */}\n      {/* <About/> */}\n      {/* </Route> */}\n      {/* <Route exact path=\"/\" element={  }> */}\n      {/* </Route> */}\n    {/* </Routes> */}\n    <TextForm alert={showAlert} color={color}/>\n    </div>\n   {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACW,KAAK,EAACC,QAAQ,CAAC,GAAEZ,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAK,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAErC,SAASe,SAASA,CAACC,OAAO,EAACC,IAAI,EAAC;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAGA;IACT,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,MAAMM,UAAU,GAAEA,CAAA,KAAI;IAClB,IAAGX,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAAC,OAAO,CAAC;MACjBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,SAAS;MAC7CT,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MAAI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAAC,SAAS,CAAC;MACnBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CT,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACJ,CAAC;EACD,oBACCX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBAECrB,OAAA,CAACH,MAAM;MAACyB,KAAK,EAAC,eAAe;MAAEjB,IAAI,EAAEA,IAAK;MAACW,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErE1B,OAAA;MAAK2B,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAQ/BrB,OAAA,CAACF,QAAQ;QAACW,KAAK,EAAEE,SAAU;QAACJ,KAAK,EAAEA;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eAEL,CAAC;AAEN;AAACtB,EAAA,CAhDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}