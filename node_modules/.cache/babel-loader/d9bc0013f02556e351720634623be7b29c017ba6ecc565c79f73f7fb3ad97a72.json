{"ast":null,"code":"var _jsxFileName = \"/Users/mokshkukreja/Desktop/development/react/text-converter/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alerts from \"./components/Alerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [color, setColor] = useState(\"#303030\");\n  const [alert, setAlert] = useState(null);\n  function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = clr => {\n    if (mode === \"light\") {\n      setMode(clr);\n      setColor(\"white\");\n      // document.body.style.backgroundColor=clr;\n      // document.body.style.backgroundColor=\"#303030\"\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setColor(\"#303030\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextConverter\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alerts, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      alert: showAlert,\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ZCfc9mHXQmSb1zT6VD/OIsr066c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alerts","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","color","setColor","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","clr","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mokshkukreja/Desktop/development/react/text-converter/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alerts from \"./components/Alerts\";\nfunction App() {\n\n\n  const [mode,setMode] = useState(\"light\")\n  const [color,setColor] =useState(\"#303030\")\n  const[alert,setAlert] = useState(null)\n\n   function showAlert(message,type){\n    setAlert({\n      msg: message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode =(clr)=>{\n      if(mode===\"light\"){\n        setMode(clr)\n        setColor(\"white\")\n        // document.body.style.backgroundColor=clr;\n        // document.body.style.backgroundColor=\"#303030\"\n        showAlert(\"Dark mode has been enabled\",\"success\")\n      }else{\n        setMode(\"light\")\n        setColor(\"#303030\")\n        document.body.style.backgroundColor=\"white\"\n        showAlert(\"Light mode has been enabled\",\"success\")\n      }\n  }\n  return (\n   <>\n    <Navbar title=\"TextConverter\"  mode={mode} toggleMode={toggleMode} />\n    <Alerts alert={alert}/>\n    <TextForm alert={showAlert} color={color}/>\n   </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAEb,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAK,CAACc,KAAK,EAACC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAErC,SAASgB,SAASA,CAACC,OAAO,EAACC,IAAI,EAAC;IAC/BH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAGA;IACT,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV;EAEA,MAAMM,UAAU,GAAGC,GAAG,IAAG;IACrB,IAAGZ,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAACW,GAAG,CAAC;MACZT,QAAQ,CAAC,OAAO,CAAC;MACjB;MACA;MACAG,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD,CAAC,MAAI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAAC,SAAS,CAAC;MACnBU,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CV,SAAS,CAAC,6BAA6B,EAAC,SAAS,CAAC;IACpD;EACJ,CAAC;EACD,oBACCX,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACCtB,OAAA,CAACJ,MAAM;MAAC2B,KAAK,EAAC,eAAe;MAAElB,IAAI,EAAEA,IAAK;MAACW,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrE3B,OAAA,CAACF,MAAM;MAACW,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvB3B,OAAA,CAACH,QAAQ;MAACY,KAAK,EAAEE,SAAU;MAACJ,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC1C,CAAC;AAEN;AAACvB,EAAA,CAtCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}